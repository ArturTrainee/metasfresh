db:
  build: db
  restart: always
  volumes:
# i don't understand docker well enough, but with this line, the prepackaged stuff is lost when i start the db container
#    - ./volumes/db/data:/var/lib/postgresql/data
    - ./volumes/db/log:/var/log/postgresql
  environment:
    - METASFRESH_USERNAME=metasfresh
    - METASFRESH_PASSWORD=metasfresh
    - METASFRESH_DBNAME=metasfresh
    - POSTGRES_PASSWORD=change_me
    - DB_SYSPASS=System
app:
  build: app
  hostname: app
  links:
    - db:db
    - rabbitmq:rabbitmq
    - search:search
  expose:
    - "8282"
    - "61616"
    - "8788"
  ports:
    - ${APP_RESTAPI_PORT}:8282
  restart: always
  volumes:
    - ./volumes/app/log:/opt/metasfresh/log:rw
  environment:
    METASFRESH_HOME: "/opt/metasfresh"
    DB_HOST: "db"
    DB_PORT: "5432"
    DB_NAME: "metasfresh"
    DB_USER: "metasfresh"
    DB_PASSWORD: "metasfresh"
    RABBITMQ_HOST: "rabbitmq"
    RABBITMQ_PORT: "5672"
    RABBITMQ_USER: "metasfresh"
    RABBITMQ_PASSWORD: "metasfresh"
webapi:
  build: webapi
  links:
    - app:app
    - db:db
    - rabbitmq:rabbitmq
    - search:search
  expose:
    - "8789"
    # to access the webui-api directly
    # (eg. for debugging or connecting your app to the metasfresh api)
    # uncomment following port:
  ports:
    - ${WEBAPI_PORT}:8080
  restart: always
  volumes:
    - ./volumes/webapi/log:/opt/metasfresh-webui-api/log:rw
  environment:
    DB_HOST: "db"
    DB_PORT: "5432"
    DB_NAME: "metasfresh"
    DB_USER: "metasfresh"
    DB_PASSWORD: "metasfresh"
    RABBITMQ_HOST: "rabbitmq"
    RABBITMQ_PORT: "5672"
    RABBITMQ_USER: "metasfresh"
    RABBITMQ_PASSWORD: "metasfresh"
webui:
  build: webui
  links:
    - webapi:webapi
  ports:
    - ${WEBUI_PORT}:80
  restart: always
  #uncomment and set to URL where metasfresh will be available from browsers
  environment:
    # Set the base URL for the webui-api server as seen from the client web browser.
    # Note that the webui-frontend itself does *not* need to be able to access the API;
    # It merely communicates this URL to your web browser which accesses the API directly.
    WEBUI_API_CLIENT_PROTOCOL: "http"
    WEBUI_API_CLIENT_HOST: "localhost"
    WEBUI_API_CLIENT_PORT: ${WEBAPI_PORT}

    # Set the base URL for the webui-api server as seen from the frontend http server.
    # I found the IP 10.0.2.202 using ipconfig on my host machine/desktop; yours might be different
    # WEBUI_API_PROXYPASS_PROTOCOL: "http"
    # WEBUI_API_PROXYPASS_HOST: "10.0.2.202"
    # WEBUI_API_PROXYPASS_PORT: '8080'

    DEBUG_CAT_NGINX_CONF_FILE: 'y' # the default, is 'n'; everything besides 'n' makes the startup script cat the nginx config file
rabbitmq:
  build: rabbitmq
  expose:
    - "5672"
  restart: always
  volumes:
    - ./volumes/rabbitmq/log:/var/log/rabbitmq/log
  environment:
    RABBITMQ_DEFAULT_USER: "metasfresh"
    RABBITMQ_DEFAULT_PASS: "metasfresh"
    RABBITMQ_DEFAULT_VHOST: "/"
search:
  build: search
  ulimits:
    memlock:
      soft: -1
      hard: -1
    nofile:
      soft: 65536
      hard: 65536
  cap_add:
    - IPC_LOCK
  # to access the search api directly
  # (e.g. if you did docker-compose up search to have the deachboard with your locally running metasfresh services)
  # uncomment following ports:
  # ports:
  #   - "9200:9200"
  #   - "9300:9300"
  volumes:
    - ./volumes/search/data:/usr/share/elasticsearch/data
  environment:
    - "ES_JAVA_OPTS=-Xms128M -Xmx256m"
  restart: always
